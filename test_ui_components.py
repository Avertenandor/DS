"""
–¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ - —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–∏–¥–∏—Ç –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã
"""

import customtkinter as ctk
from ui.themes.dark_theme import get_theme
from utils.logger import get_logger

logger = get_logger(__name__)

def test_ui_visibility():
    """–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤."""
    
    app = ctk.CTk()
    app.title("üß™ PLEX UI Components Test")
    app.geometry("1000x700")
    app.resizable(True, True)
    
    theme = get_theme()
    ctk.set_appearance_mode("dark")
    ctk.set_default_color_theme("blue")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –æ–∫–Ω–æ —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
    
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    title = ctk.CTkLabel(
        app,
        text="üß™ –¢–µ—Å—Ç UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ PLEX Dynamic Staking Manager",
        font=("Arial", 20, "bold"),
        text_color=theme.colors['text_primary']
    )
    title.pack(pady=(20, 10))
    
    # –û–ø–∏—Å–∞–Ω–∏–µ
    desc = ctk.CTkLabel(
        app,
        text="–ï—Å–ª–∏ –≤—ã –≤–∏–¥–∏—Ç–µ —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç –∏ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∏–∂–µ, —Ç–æ UI —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ",
        font=("Arial", 14),
        text_color=theme.colors['text_secondary']
    )
    desc.pack(pady=10)
    
    # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    container = ctk.CTkScrollableFrame(app)
    container.pack(fill='both', expand=True, padx=20, pady=20)
    
    # –ö–Ω–æ–ø–∫–∏
    buttons_frame = ctk.CTkFrame(container)
    buttons_frame.pack(fill='x', pady=10)
    buttons_frame.configure(fg_color=theme.colors['bg_secondary'])
    
    ctk.CTkLabel(
        buttons_frame,
        text="üéÆ –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:",
        font=("Arial", 14, "bold")
    ).pack(pady=(10, 5))
    
    btns_row = ctk.CTkFrame(buttons_frame)
    btns_row.configure(fg_color="transparent")
    btns_row.pack(pady=10)
    
    for i, (text, color) in enumerate([
        ("üöÄ –ù–∞—á–∞—Ç—å –∞–Ω–∞–ª–∏–∑", theme.colors['btn_primary']),
        ("‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å", theme.colors['btn_danger']),
        ("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", theme.colors['info']),
        ("üìÑ –≠–∫—Å–ø–æ—Ä—Ç", theme.colors['success'])
    ]):
        btn = ctk.CTkButton(
            btns_row,
            text=text,
            fg_color=color,
            width=150,
            height=40
        )
        btn.pack(side='left', padx=5)
    
    # –ü–æ–ª—è –≤–≤–æ–¥–∞
    inputs_frame = ctk.CTkFrame(container)
    inputs_frame.pack(fill='x', pady=10)
    inputs_frame.configure(fg_color=theme.colors['bg_secondary'])
    
    ctk.CTkLabel(
        inputs_frame,
        text="üìù –ü–æ–ª—è –≤–≤–æ–¥–∞:",
        font=("Arial", 14, "bold")
    ).pack(pady=(10, 5))
    
    inputs_row = ctk.CTkFrame(inputs_frame)
    inputs_row.configure(fg_color="transparent")
    inputs_row.pack(pady=10)
    
    for label, placeholder in [
        ("üìÖ –û—Ç:", "YYYY-MM-DD HH:MM"),
        ("üìÖ –î–æ:", "YYYY-MM-DD HH:MM"),
        ("üí∞ –ú–∏–Ω. –æ–±—ä–µ–º:", "0.0"),
        ("üîç –ü–æ–∏—Å–∫:", "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç...")
    ]:
        ctk.CTkLabel(inputs_row, text=label).pack(side='left', padx=(10, 5))
        entry = ctk.CTkEntry(inputs_row, width=120, placeholder_text=placeholder)
        entry.pack(side='left', padx=(0, 10))
    
    # –¢–∞–±–ª–∏—Ü–∞-–∏–º–∏—Ç–∞—Ü–∏—è
    table_frame = ctk.CTkFrame(container)
    table_frame.pack(fill='both', expand=True, pady=10)
    table_frame.configure(fg_color=theme.colors['bg_secondary'])
    
    ctk.CTkLabel(
        table_frame,
        text="üìä –¢–∞–±–ª–∏—Ü–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:",
        font=("Arial", 14, "bold")
    ).pack(pady=(10, 5))
    
    # –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
    headers_frame = ctk.CTkFrame(table_frame)
    headers_frame.pack(fill='x', padx=10, pady=5)
    headers_frame.configure(fg_color=theme.colors['bg_tertiary'])
    
    headers = ["‚Ññ", "–ê–¥—Ä–µ—Å", "–ë–∞–ª–∞–Ω—Å", "–ö–∞—Ç–µ–≥–æ—Ä–∏—è", "–°—Ç–∞—Ç—É—Å", "–î–µ–π—Å—Ç–≤–∏—è"]
    for header in headers:
        ctk.CTkLabel(
            headers_frame,
            text=header,
            font=("Arial", 12, "bold"),
            width=120
        ).pack(side='left', padx=5, pady=5)
    
    # –ü—Ä–∏–º–µ—Ä—ã —Å—Ç—Ä–æ–∫
    for i in range(3):
        row_frame = ctk.CTkFrame(table_frame)
        row_frame.pack(fill='x', padx=10, pady=2)
        
        data = [
            str(i+1),
            f"0x1234...{i+1:04d}",
            f"{1000+i*100:.2f} PLEX",
            "PERFECT" if i == 0 else "MISSED_PURCHASE",
            "‚úÖ –ü–æ–¥—Ö–æ–¥–∏—Ç" if i == 0 else "‚ùå –ù–µ –ø–æ–¥—Ö–æ–¥–∏—Ç",
            "üìã üí∞ üéÅ"
        ]
        
        for cell in data:
            ctk.CTkLabel(
                row_frame,
                text=cell,
                width=120,
                font=("Arial", 10)
            ).pack(side='left', padx=5, pady=2)
    
    # –°—Ç–∞—Ç—É—Å –≤ footer
    footer = ctk.CTkFrame(app)
    footer.pack(fill='x', side='bottom')
    footer.configure(fg_color=theme.colors['bg_tertiary'])
    
    status = ctk.CTkLabel(
        footer,
        text="‚úÖ UI —Ç–µ—Å—Ç: –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ | Resizable: –î–∞ | –õ–æ–≥–∏: –î–æ—Å—Ç—É–ø–Ω—ã",
        font=("Arial", 12),
        text_color=theme.colors['success']
    )
    status.pack(pady=10)
    
    logger.info("üß™ –¢–µ—Å—Ç UI –∑–∞–ø—É—â–µ–Ω")
    app.mainloop()

if __name__ == "__main__":
    test_ui_visibility()
