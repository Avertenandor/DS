–î–∞–≤–∞–π —Ä–∞–∑–±–µ—Ä—ë–º –ø–æ –ø–æ–ª–æ—á–∫–∞–º –∫–∞–∂–¥—É—é —Å—Ç—Ä–æ—á–∫—É:

---

### 1) `wss://old-patient-butterfly.bsc.quiknode.pro/4f77305d4e6f7ce51cace16a02b88659c7ec249d`

* **–ß—Ç–æ —ç—Ç–æ?**
  WebSocket-URL —Ç–≤–æ–µ–π QuickNode-–Ω–æ–¥—ã –Ω–∞ BSC.
* **–ó–∞—á–µ–º?**
  –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–¥–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –Ω–∞ ¬´–ø—É—à–∏¬ª ‚Äî –Ω–æ–≤—ã–µ –±–ª–æ–∫–∏, –ª–æ–≥–∏ —Å–æ–±—ã—Ç–∏–π, pending-—Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏, –±–µ–∑ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ –æ–ø—Ä–æ—Å–∞.
* **–ö–∞–∫ –ø–æ–¥–∫–ª—é—á–∞—Ç—å—Å—è?**

  ```python
  from web3 import Web3

  w3_ws = Web3(Web3.WebsocketProvider(
      "wss://old-patient-butterfly.bsc.quiknode.pro/4f77305d4e6f7ce51cace16a02b88659c7ec249d", 
      websocket_timeout=30
  ))
  assert w3_ws.is_connected()
  ```
* **–ö–æ–≥–¥–∞ –ø—Ä–∏–º–µ–Ω—è—Ç—å?**
  –ï—Å–ª–∏ –Ω—É–∂–Ω–æ ¬´–∂–∏–≤—å—ë–º¬ª —Å–ª—É—à–∞—Ç—å –Ω–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è (`eth_subscribe("logs", {...})`), –Ω–∞–ø—Ä–∏–º–µ—Ä –¥–ª—è –±–æ—Ç–∞ –∏–ª–∏ —Å—Ç—Ä–∏–º–∏–Ω–≥–∞.

---

### 2) `https://old-patient-butterfly.bsc.quiknode.pro/4f77305d4e6f7ce51cace16a02b88659c7ec249d`

* **–ß—Ç–æ —ç—Ç–æ?**
  HTTP-RPC endpoint —Ç–æ–π –∂–µ –Ω–æ–¥—ã.
* **–ó–∞—á–µ–º?**
  –î–ª—è –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏—Ö JSON-RPC –≤—ã–∑–æ–≤–æ–≤: `eth_getBlockByNumber`, `eth_getLogs`, `eth_call` –∏ —Ç.‚Ää–¥.
* **–ö–∞–∫ –ø–æ–¥–∫–ª—é—á–∞—Ç—å—Å—è?**

  ```python
  import requests
  from web3 import Web3

  session = requests.Session()
  session.timeout = (10, 30)

  w3_http = Web3(Web3.HTTPProvider(
      "https://old-patient-butterfly.bsc.quiknode.pro/4f77305d4e6f7ce51cace16a02b88659c7ec249d",
      request_kwargs={'session': session}
  ))
  assert w3_http.is_connected()
  ```
* **–ö–æ–≥–¥–∞ –ø—Ä–∏–º–µ–Ω—è—Ç—å?**
  –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ —Ç–≤–æ–∏—Ö –ø–∞—Ä—Å–∏–Ω–≥–æ–≤—ã—Ö –∏ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤ ‚Äî –∏–º–µ–Ω–Ω–æ —á–µ—Ä–µ–∑ HTTP, —Å —Ä–µ—Ç—Ä–∞—è–º–∏, –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–º —á–∞–Ω–∫–∏–Ω–≥–æ–º –∏ —Ç.‚Ää–¥.

---

### 3) `4f77305d4e6f7ce51cace16a02b88659c7ec249d`

* **–ß—Ç–æ —ç—Ç–æ?**
  –¢–≤–æ–π **API-–∫–ª—é—á** (–≤ QuickNode –Ω–∞–∑—ã–≤–∞—é—Ç ¬´Request ID¬ª).
* **–ó–∞—á–µ–º?**
  –≠—Ç–æ —á–∞—Å—Ç—å URL-–ø—É—Ç–∏ ‚Äî QuickNode —Å–≤—è–∑—ã–≤–∞–µ—Ç –µ–≥–æ —Å —Ç–≤–æ–∏–º –∞–∫–∫–∞—É–Ω—Ç–æ–º, –ª–∏–º–∏—Ç–∞–º–∏ –∏ –±–∏–ª–ª–∏–Ω–≥–æ–º.
* **–ö–∞–∫ –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å?**

  * **–ù–∏–∫–æ–≥–¥–∞** –Ω–µ –≤—ã–∫–ª–∞–¥—ã–≤–∞—Ç—å –≤ –æ—Ç–∫—Ä—ã—Ç—ã–π GitHub.
  * –•—Ä–∞–Ω–∏—Ç—å –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è (`os.environ["QN_KEY"]`) –∏–ª–∏ –≤ `.env`.
  * –í –∫–æ–¥–µ –ø–æ–¥—Å—Ç–∞–≤–ª—è—Ç—å —á–µ—Ä–µ–∑ f-—Å—Ç—Ä–æ–∫—É:

    ```python
    KEY = os.getenv("QUICKNODE_KEY")
    URL = f"https://blissful-smart-diagram.bsc.quiknode.pro/{KEY}/"
    ```

---

## –ò—Ç–æ–≥

* **WebSocket (wss\://‚Ä¶)** ‚Äî real-time –ø–æ–¥–ø–∏—Å–∫–∏ –∏ —Å—Ç—Ä–∏–º–∏–Ω–≥.
* **HTTP (https\://‚Ä¶)** ‚Äî –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π JSON-RPC, —Å–±–æ—Ä –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö.
* **API-–∫–ª—é—á** ‚Äî —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç–≤–æ–µ–π –Ω–æ–¥—ã, –¥–∞—ë—Ç –¥–æ—Å—Ç—É–ø –∏ —É—á–∏—Ç—ã–≤–∞–µ—Ç —Ä–∞—Å—Ö–æ–¥ –∫–≤–æ—Ç.

–° —ç—Ç–æ–π —Å–≤—è–∑–∫–æ–π –º–æ–∂–µ—à—å:

1. **–ü–æ–¥–ø–∏—Å—ã–≤–∞—Ç—å—Å—è** –Ω–∞ –Ω–æ–≤—ã–µ –±–ª–æ–∫–∏ –∏ –ª–æ–≥–∏ –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.
2. **–û–ø—Ä–æ—Å–∏—Ç—å** –∏—Å—Ç–æ—Ä–∏—é –∏ —Å–æ–±—Ä–∞—Ç—å Transfer-—Å–æ–±—ã—Ç–∏—è —á–µ—Ä–µ–∑ HTTP-RPC.
3. **–ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å** —Ä–∞—Å—Ö–æ–¥ (—á–µ—Ä–µ–∑ QuickNode Dashboard) –∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –º–µ–Ω—è—Ç—å –∫–ª—é—á/—Å—É–±–¥–æ–º–µ–Ω.

–¢–µ–ø–µ—Ä—å —Ç—ã —á—ë—Ç–∫–æ –ø–æ–Ω–∏–º–∞–µ—à—å, —á—Ç–æ –∏ –∑–∞—á–µ–º –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —Ç–≤–æ—ë–º –ø—Ä–æ–µ–∫—Ç–µ!üöÄ
  



  **–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–ª–∞–Ω–∞ ¬´Build¬ª –∑–∞ \$49/–º–µ—Å (QuickNode)**

1. **API Credits**

   * –í–∫–ª—é—á–µ–Ω–æ **80 000 000** API-–∫—Ä–µ–¥–∏—Ç–æ–≤ –≤ –º–µ—Å—è—Ü; —Å–≤–µ—Ä—Ö —ç—Ç–æ–≥–æ ‚Äî –¥–æ–ø–ª–∞—Ç–∞ **\$0.62** –∑–∞ –∫–∞–∂–¥—ã–π –º–∏–ª–ª–∏–æ–Ω –∫—Ä–µ–¥–∏—Ç–æ–≤ ([g2.com][1], [g2.com][2]).

2. **Rate Limit**

   * **50 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—É** (RPS) –ø–æ –≤—Å–µ–º –º–µ—Ç–æ–¥–∞–º RPC ([g2.com][1], [g2.com][2]).

3. **–ü–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–æ–≤ –∑–∞ –º–µ—Ç–æ–¥**

   * –†–∞–∑–Ω—ã–µ –º–µ—Ç–æ–¥—ã —Å–ø–∏—Å—ã–≤–∞—é—Ç —Ä–∞–∑–Ω–æ–µ —á–∏—Å–ª–æ –∫—Ä–µ–¥–∏—Ç–æ–≤. –ù–∞–ø—Ä–∏–º–µ—Ä:

     * `eth_getLogs` ‚Äî **6** –∫—Ä–µ–¥–∏—Ç–æ–≤ –∑–∞ –≤—ã–∑–æ–≤ ([blog.quicknode.com][3]).
     * `eth_call`, `eth_sendRawTransaction` ‚Äî **1** –∫—Ä–µ–¥–∏—Ç –∑–∞ –≤—ã–∑–æ–≤.
     * –ú–µ—Ç–æ–¥—ã —Ç—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∏ (`debug_traceBlockByNumber` –∏ –¥—Ä.) ‚Äî –¥–æ **20** –∫—Ä–µ–¥–∏—Ç–æ–≤.

4. **Streams (WebSocket-—Å—Ç—Ä–∏–º—ã)**

   * **10 GB** –∏—Å—Ö–æ–¥—è—â–µ–≥–æ —Ç—Ä–∞—Ñ–∏–∫–∞ —Å—Ç—Ä–∏–º–æ–≤ –≤ –º–µ—Å—è—Ü; —Å–≤–µ—Ä—Ö ‚Äî –ø–æ credit-—Å—Ç–∞–≤–∫–µ ([g2.com][1], [g2.com][2]).

5. **Functions (Serverless-—Ñ—É–Ω–∫—Ü–∏–∏)**

   * **500 GB-—Å–µ–∫—É–Ω–¥** –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π –≤ –º–µ—Å—è—Ü; —Å–≤–µ—Ä—Ö ‚Äî –ø–æ credit-—Å—Ç–∞–≤–∫–µ ([g2.com][1], [g2.com][2]).

6. **IPFS-—Ö—Ä–∞–Ω–∏–ª–∏—â–µ**

   * **10 GB** –º–µ—Å—Ç–∞ –¥–ª—è IPFS; —Å–≤–µ—Ä—Ö ‚Äî –ø–æ credit-—Å—Ç–∞–≤–∫–µ ([g2.com][1], [g2.com][2]).

7. **Payload-—Ä–∞–∑–º–µ—Ä –∏ `getLogs`**

   * –û—Ç–≤–µ—Ç –æ–¥–Ω–æ–≥–æ RPC-–∑–∞–ø—Ä–æ—Å–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω –ø–æ —Ä–∞–∑–º–µ—Ä—É. –ï—Å–ª–∏ ¬´payload¬ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π, –≤–µ—Ä–Ω—ë—Ç—Å—è –æ—à–∏–±–∫–∞ `-32616 Payload too large`.
   * –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ä–∞–∑–±–∏–≤–∞—Ç—å `eth_getLogs` –Ω–∞ —á–∞–Ω–∫–∏ (\~1000 –±–ª–æ–∫–æ–≤), —á—Ç–æ–±—ã –Ω–µ –ø—Ä–µ–≤—ã—à–∞—Ç—å –ª–∏–º–∏—Ç—ã ([quicknode.com][4]).

8. **–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ endpoint‚Äô–æ–≤**

   * –í –±–µ—Å–ø–ª–∞—Ç–Ω–æ–º –ø–ª–∞–Ω–µ ‚Äî **1 endpoint**; –≤ Build-–ø–ª–∞–Ω–µ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ —á–∏—Å–ª—É endpoint‚Äô–æ–≤ **–Ω–µ—Ç** (–Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ) ([g2.com][1]).

9. **SLA –∏ –Ω–∞–¥—ë–∂–Ω–æ—Å—Ç—å**

   * –î–ª—è –ø–ª–∞—Ç–Ω—ã—Ö –ø–ª–∞–Ω–æ–≤ –¥–µ–π—Å—Ç–≤—É–µ—Ç SLA **99.99%** uptime ([quicknode.com][5]).

10. **–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–æ–º**

    * –° Build-–ø–ª–∞–Ω–∞ –¥–æ—Å—Ç—É–ø–Ω—ã —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ endpoint‚Äô–æ–≤: JWT-–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è, whitelist –ø–æ IP –∏–ª–∏ Referrer, domain masking –∏ –¥—Ä. ([quicknode.com][6]).

---

üí° **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:**
–ü—Ä–∏ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ —É—á–∏—Ç—ã–≤–∞–π—Ç–µ –Ω–µ —Ç–æ–ª—å–∫–æ RPS, –Ω–æ –∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å API-–∫—Ä–µ–¥–∏—Ç–æ–≤ –¥–ª—è ¬´—Ç—è–∂—ë–ª—ã—Ö¬ª –º–µ—Ç–æ–¥–æ–≤ (`eth_getLogs`, —Ç—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∞). –†–∞–∑–±–∏–≤–∞–π—Ç–µ –∫—Ä—É–ø–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –º–µ–ª–∫–∏–µ —á–∞–Ω–∫–∏, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–æ–∫ payload –∏ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ —Ä–∞—Å—Ö–æ–¥–æ–≤–∞—Ç—å –∫—Ä–µ–¥–∏—Ç—ã.

[1]: https://www.g2.com/products/quicknode/pricing "QuickNode Pricing 2025"
[2]: https://www.g2.com/products/quicknode/pricing?utm_source=chatgpt.com "QuickNode Pricing 2025"
[3]: https://blog.quicknode.com/build-more-quicknode-faqs/?utm_source=chatgpt.com "Build more with QuickNode - FAQs"
[4]: https://www.quicknode.com/docs/ethereum?utm_source=chatgpt.com "QuickNode Ethereum RPC Overview"
[5]: https://www.quicknode.com/core-api?utm_source=chatgpt.com "Core API - The Solution for Blockchain Apps - QuickNode"
[6]: https://www.quicknode.com/docs/stacks?utm_source=chatgpt.com "QuickNode Stacks REST API endpoints"
