#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ BSC –Ω–æ–¥–µ.
"""

import os
import sys
sys.path.insert(0, '.')

def test_node_connection():
    """–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –Ω–æ–¥–µ."""
    try:
        # –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
        from dotenv import load_dotenv
        load_dotenv()
        
        rpc_url = os.getenv('QUICKNODE_HTTP')
        print(f"üîó RPC URL: {rpc_url}")
        
        if not rpc_url:
            print("‚ùå RPC URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
            return
        
        # –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        from blockchain.node_client import Web3Manager
        
        print("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ Web3Manager...")
        w3_manager = Web3Manager()
        
        print("üì° –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –±–ª–æ–∫–∞...")
        latest_block = w3_manager.get_latest_block_number()
        
        if latest_block and latest_block > 0:
            print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ! –ü–æ—Å–ª–µ–¥–Ω–∏–π –±–ª–æ–∫: {latest_block}")
            print(f"üåê –°–µ—Ç—å: BSC Mainnet")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–º–µ—Ä –±–ª–æ–∫–∞")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ BSC –Ω–æ–¥–µ...")
    test_node_connection()
