"""
PLEX Dynamic Staking Manager - UI Demo Script
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.

–ê–≤—Ç–æ—Ä: PLEX Dynamic Staking Team
–í–µ—Ä—Å–∏—è: 4.0.0
"""

import os
import sys
import traceback

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –≤ –ø—É—Ç—å
BASE_DIR = os.path.dirname(os.path.abspath(__file__))
sys.path.insert(0, BASE_DIR)

print("üß™ DEMO: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ PLEX Dynamic Staking Manager v4.0")
print("="*70)

def test_dependencies():
    """–¢–µ—Å—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π."""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    
    try:
        import customtkinter as ctk
        print("   ‚úÖ CustomTkinter: –î–æ—Å—Ç—É–ø–µ–Ω")
    except ImportError as e:
        print(f"   ‚ùå CustomTkinter: –ù–µ –Ω–∞–π–¥–µ–Ω - {e}")
        return False
    
    try:
        import tkinter as tk
        print("   ‚úÖ Tkinter: –î–æ—Å—Ç—É–ø–µ–Ω")
    except ImportError as e:
        print(f"   ‚ùå Tkinter: –ù–µ –Ω–∞–π–¥–µ–Ω - {e}")
        return False
    
    return True

def test_theme():
    """–¢–µ—Å—Ç —Ç–µ–º—ã."""
    print("\\nüé® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–º—ã...")
    
    try:
        from ui.themes.dark_theme import get_theme, apply_window_style
        theme = get_theme()
        print("   ‚úÖ –¢–µ–º–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        
        # –¢–µ—Å—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å—Ç–∏–ª–µ–π
        styles = ['primary', 'secondary', 'tertiary', 'card']
        for style in styles:
            style_config = theme.get_frame_style(style)
            print(f"   ‚úÖ –°—Ç–∏–ª—å '{style}': {len(style_config)} –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤")
        
        return True
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Ç–µ–º—ã: {e}")
        return False

def test_components():
    """–¢–µ—Å—Ç UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤."""
    print("\\nüß© –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...")
    
    try:
        from ui.components.log_viewer import LogViewer
        from ui.components.progress_bar import ProgressBar
        print("   ‚úÖ LogViewer: –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        print("   ‚úÖ ProgressBar: –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        return True
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: {e}")
        return False

def test_tabs():
    """–¢–µ—Å—Ç –≤–∫–ª–∞–¥–æ–∫."""
    print("\\nüìÇ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫...")
    
    tabs = [
        ('ui.tabs.analysis_tab', 'AnalysisTab'),
        ('ui.tabs.rewards_tab', 'RewardsTab'),
        ('ui.tabs.history_tab', 'HistoryTab'),
        ('ui.tabs.settings_tab', 'SettingsTab')
    ]
    
    for module_name, class_name in tabs:
        try:
            module = __import__(module_name, fromlist=[class_name])
            tab_class = getattr(module, class_name)
            print(f"   ‚úÖ {class_name}: –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        except Exception as e:
            print(f"   ‚ùå {class_name}: –û—à–∏–±–∫–∞ - {e}")
            return False
    
    return True

def test_main_window():
    """–¢–µ—Å—Ç –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞."""
    print("\\nüè† –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞...")
    
    try:
        from ui.main_window_v4 import PLEXStakingMainWindow
        print("   ‚úÖ PLEXStakingMainWindow: –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–µ–∑ –∑–∞–ø—É—Å–∫–∞ UI
        app = PLEXStakingMainWindow()
        print("   ‚úÖ PLEXStakingMainWindow: –≠–∫–∑–µ–º–ø–ª—è—Ä —Å–æ–∑–¥–∞–Ω")
        
        return True
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞: {e}")
        return False

def test_core_modules():
    """–¢–µ—Å—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π."""
    print("\\nüß† –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π...")
    
    modules = [
        'core.staking_manager',
        'core.reward_calculator',
        'blockchain.node_client',
        'db.database'
    ]
    
    for module_name in modules:
        try:
            __import__(module_name)
            print(f"   ‚úÖ {module_name}: –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        except Exception as e:
            print(f"   ‚ùå {module_name}: –û—à–∏–±–∫–∞ - {e}")
            # –ù–µ –∫—Ä–∏—Ç–∏—á–Ω–∞—è –æ—à–∏–±–∫–∞ –¥–ª—è –¥–µ–º–æ
    
    return True

def run_ui_demo():
    """–ó–∞–ø—É—Å–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ UI."""
    print("\\nüöÄ –ó–∞–ø—É—Å–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ UI...")
    
    try:
        import customtkinter as ctk
        from ui.themes.dark_theme import apply_window_style
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ –¥–µ–º–æ-–æ–∫–Ω–∞
        root = ctk.CTk()
        root.title("PLEX UI Demo - v4.0")
        root.geometry("800x600")
        
        # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–º—ã
        apply_window_style(root)
        
        # –î–µ–º–æ-–∫–æ–Ω—Ç–µ–Ω—Ç
        label = ctk.CTkLabel(
            root,
            text="üíé PLEX Dynamic Staking Manager v4.0\\n\\nüéâ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç!\\n\\n–ó–∞–∫—Ä–æ–π—Ç–µ —ç—Ç–æ –æ–∫–Ω–æ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...",
            font=ctk.CTkFont(size=16, weight="bold")
        )
        label.pack(expand=True)
        
        button = ctk.CTkButton(
            root,
            text="–ó–∞–∫—Ä—ã—Ç—å –¥–µ–º–æ",
            command=root.destroy,
            width=200,
            height=40
        )
        button.pack(pady=20)
        
        print("   ‚úÖ –î–µ–º–æ-–æ–∫–Ω–æ —Å–æ–∑–¥–∞–Ω–æ")
        print("   üñºÔ∏è –î–µ–º–æ-–æ–∫–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è...")
        print("   üí° –ó–∞–∫—Ä–æ–π—Ç–µ –æ–∫–Ω–æ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–µ–º–æ")
        
        root.mainloop()
        
        print("   ‚úÖ –î–µ–º–æ-–æ–∫–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ")
        return True
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –¥–µ–º–æ UI: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ."""
    print("\\n" + "="*70)
    print("üß™ –ù–ê–ß–ê–õ–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
    print("="*70)
    
    tests = [
        ("–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏", test_dependencies),
        ("–¢–µ–º–∞", test_theme),
        ("UI –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã", test_components),
        ("–í–∫–ª–∞–¥–∫–∏", test_tabs),
        ("–ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ", test_main_window),
        ("–û—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏", test_core_modules)
    ]
    
    results = []
    
    for test_name, test_func in tests:
        try:
            result = test_func()
            results.append((test_name, result))
        except Exception as e:
            print(f"   ‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ '{test_name}': {e}")
            results.append((test_name, False))
    
    # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    print("\\n" + "="*70)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
    print("="*70)
    
    passed = 0
    total = len(results)
    
    for test_name, result in results:
        status = "‚úÖ –ü–†–û–ô–î–ï–ù" if result else "‚ùå –ü–†–û–í–ê–õ–ï–ù"
        print(f"{test_name:20} | {status}")
        if result:
            passed += 1
    
    print("-"*70)
    print(f"üìà –ò—Ç–æ–≥–æ: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ ({passed/total*100:.1f}%)")
    
    # –ó–∞–ø—É—Å–∫ UI –¥–µ–º–æ –µ—Å–ª–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏
    if passed >= total - 1:  # –†–∞–∑—Ä–µ—à–∞–µ–º 1 –Ω–µ—É—Å–ø–µ—à–Ω—ã–π —Ç–µ—Å—Ç
        print("\\nüéâ –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –ó–∞–ø—É—Å–∫ UI –¥–µ–º–æ...")
        
        choice = input("\\n‚ùì –ó–∞–ø—É—Å—Ç–∏—Ç—å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é UI? (y/n): ").lower()
        if choice in ['y', 'yes', '–¥–∞', '']:
            run_ui_demo()
        else:
            print("‚è≠Ô∏è UI –¥–µ–º–æ –ø—Ä–æ–ø—É—â–µ–Ω–æ")
    else:
        print("\\n‚ö†Ô∏è –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø—Ä–æ–≤–∞–ª–æ–≤. UI –¥–µ–º–æ –ø—Ä–æ–ø—É—â–µ–Ω–æ.")
    
    print("\\n" + "="*70)
    print("üèÅ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û")
    print("="*70)
    
    if passed == total:
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´! –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.")
        print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: python main_v4.py")
    else:
        print("‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π.")
        print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r requirements.txt")
    
    return passed == total

if __name__ == "__main__":
    try:
        success = main()
        sys.exit(0 if success else 1)
    except KeyboardInterrupt:
        print("\\n\\n‚èπÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(1)
    except Exception as e:
        print(f"\\n\\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        print("\\nüìã –¢—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∞:")
        traceback.print_exc()
        sys.exit(1)
