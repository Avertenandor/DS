#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–º–µ–Ω—ã ctk.CTkEntry —Å placeholder_text –Ω–∞ SafeWidgetFactory.
"""

import os
import re
from pathlib import Path

def replace_placeholder_entries(file_path):
    """–ó–∞–º–µ–Ω—è–µ—Ç ctk.CTkEntry —Å placeholder_text –Ω–∞ SafeWidgetFactory."""
    print(f"üîß –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è: {file_path}")
    
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        original_content = content
        changes_made = False
        
        # –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞ ctk.CTkEntry —Å placeholder_text
        # –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
        pattern = r'(\s*)(\w+)\s*=\s*ctk\.CTkEntry\(\s*([^,)]+)(?:,\s*placeholder_text\s*=\s*"([^"]+)")?([^)]*)\)'
        
        def replace_match(match):
            nonlocal changes_made
            indent = match.group(1)
            var_name = match.group(2)
            parent = match.group(3).strip()
            placeholder = match.group(4)  # –ú–æ–∂–µ—Ç –±—ã—Ç—å None
            remaining_params = match.group(5)
            
            if not placeholder:
                return match.group(0)  # –ù–µ —Ç—Ä–æ–≥–∞–µ–º entry –±–µ–∑ placeholder_text
            
            changes_made = True
            
            # –û—á–∏—â–∞–µ–º –ª–∏—à–Ω–∏–µ –∑–∞–ø—è—Ç—ã–µ –∏ –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫ –∏–∑ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
            if remaining_params:
                remaining_params = remaining_params.strip()
                if remaining_params.startswith(','):
                    remaining_params = remaining_params[1:].strip()
                if remaining_params.endswith(','):
                    remaining_params = remaining_params[:-1].strip()
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –∫–æ–¥
            result = f'{indent}{var_name} = self.widget_factory.create_entry(\n'
            result += f'{indent}    {parent}'
            
            if remaining_params:
                # –†–∞–∑–±–∏–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ –∑–∞–ø—è—Ç—ã–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –æ—Ç—Å—Ç—É–ø–æ–º
                params = [p.strip() for p in remaining_params.split(',') if p.strip()]
                for param in params:
                    result += f',\n{indent}    {param}'
            
            result += f'\n{indent})\n'
            result += f'{indent}self.widget_factory.setup_placeholder({var_name}, "{placeholder}")'
            
            return result
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º –∑–∞–º–µ–Ω—É
        content = re.sub(pattern, replace_match, content, flags=re.MULTILINE | re.DOTALL)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª –µ—Å–ª–∏ –±—ã–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
        if changes_made:
            with open(file_path, 'w', encoding='utf-8') as f:
                f.write(content)
            print(f"   ‚úÖ –ó–∞–º–µ–Ω–µ–Ω—ã CTkEntry —Å placeholder_text")
            return True
        else:
            print(f"   ‚è≠Ô∏è placeholder_text –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    base_dir = Path(__file__).parent
    ui_dir = base_dir / "ui"
    
    print("üöÄ –ó–∞–º–µ–Ω–∞ CTkEntry —Å placeholder_text –Ω–∞ SafeWidgetFactory")
    print(f"üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {ui_dir}")
    print()
    
    # –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ —Å placeholder_text (–∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –ø–æ–∏—Å–∫–∞)
    files_to_fix = [
        "ui/main_window.py",
        "ui/main_window_v2.py", 
        "ui/themes/dark_theme.py",
        "ui/tabs/analysis_tab.py",
        "ui/tabs/enhanced_analysis_tab.py",
        "ui/tabs/enhanced_rewards_tab.py",
        "ui/tabs/enhanced_history_tab.py"
    ]
    
    fixed_count = 0
    
    for relative_path in files_to_fix:
        file_path = base_dir / relative_path
        if file_path.exists():
            if replace_placeholder_entries(file_path):
                fixed_count += 1
        else:
            print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}")
    
    print()
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ {fixed_count} —Ñ–∞–π–ª–æ–≤")
    print("üéâ –ó–∞–º–µ–Ω–∞ placeholder_text –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

if __name__ == "__main__":
    main()
