#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
"""

import sys
import os
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def test_components():
    print("=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–ò –ö–û–ú–ü–û–ù–ï–ù–¢–û–í ===")
    
    try:        # Web3Manager
        from blockchain.node_client import Web3Manager
        web3_manager = Web3Manager()
        print("‚úÖ Web3Manager: OK")
          # GasManager
        from blockchain.gas_manager import GasManager
        gas_manager = GasManager(web3_manager)
        print("‚úÖ GasManager: OK")
        
        # StakingManager
        from core.staking_manager import StakingManager
        staking_manager = StakingManager()
        print("‚úÖ StakingManager: OK")
        
        # TransferCollector
        from blockchain.transfer_collector import TransferCollector
        transfer_collector = TransferCollector(web3_manager)
        print("‚úÖ TransferCollector: OK")
        
        # SwapAnalyzer
        from blockchain.swap_analyzer import SwapAnalyzer
        swap_analyzer = SwapAnalyzer(web3_manager)
        print("‚úÖ SwapAnalyzer: OK")
        
        # SimpleAnalyzer
        from core.simple_analyzer import SimpleAnalyzer
        simple_analyzer = SimpleAnalyzer()
        print("‚úÖ SimpleAnalyzer: OK")
        
        print("\nüéâ –í–°–ï –ö–û–ú–ü–û–ù–ï–ù–¢–´ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ò–†–û–í–ê–ù–´ –£–°–ü–ï–®–ù–û!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = test_components()
    sys.exit(0 if success else 1)
