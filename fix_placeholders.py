#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∑–∞–º–µ–Ω—ã placeholder_text –Ω–∞ SafeWidgetFactory
–≤–æ –≤—Å–µ—Ö UI —Ñ–∞–π–ª–∞—Ö –ø—Ä–æ–µ–∫—Ç–∞.
"""

import os
import re
import sys
from pathlib import Path

def fix_file(file_path):
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –æ–¥–∏–Ω —Ñ–∞–π–ª."""
    print(f"üîß –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è: {file_path}")
    
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        original_content = content
        
        # 1. –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç SafeWidgetFactory (–µ—Å–ª–∏ –Ω–µ—Ç)
        if 'from utils.widget_factory import SafeWidgetFactory' not in content:
            # –ò—â–µ–º –º–µ—Å—Ç–æ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –∏–º–ø–æ—Ä—Ç–∞
            import_pattern = r'(from utils\.logger import get_logger\n)'
            if re.search(import_pattern, content):
                content = re.sub(
                    import_pattern, 
                    r'\1from utils.widget_factory import SafeWidgetFactory\n', 
                    content
                )
                print(f"   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –∏–º–ø–æ—Ä—Ç SafeWidgetFactory")
        
        # 2. –î–æ–±–∞–≤–ª—è–µ–º widget_factory –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä (–µ—Å–ª–∏ –Ω–µ—Ç)
        if 'widget_factory=' not in content and 'self.widget_factory' not in content:
            # –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞
            constructor_pattern = r'def __init__\(self, parent([^)]*)\):'
            if re.search(constructor_pattern, content):
                content = re.sub(
                    constructor_pattern,
                    r'def __init__(self, parent\1, widget_factory=None):',
                    content
                )
                
                # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é widget_factory
                theme_pattern = r'(self\.theme = get_theme\(\)\n)'
                if re.search(theme_pattern, content):
                    content = re.sub(
                        theme_pattern,
                        r'\1        self.widget_factory = widget_factory or SafeWidgetFactory(self.theme)\n',
                        content
                    )
                    print(f"   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω widget_factory –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä")
        
        # 3. –ó–∞–º–µ–Ω—è–µ–º ctk.CTkEntry —Å placeholder_text –Ω–∞ SafeWidgetFactory
        entry_pattern = r'(\s+)(\w+) = ctk\.CTkEntry\(\s*([^,]+),\s*placeholder_text="([^"]+)",?\s*([^)]*)\)'
        
        def replace_entry(match):
            indent = match.group(1)
            var_name = match.group(2)
            parent = match.group(3)
            placeholder = match.group(4)
            other_params = match.group(5).strip()
            
            if other_params and other_params.endswith(','):
                other_params = other_params[:-1]
            
            result = f'{indent}{var_name} = self.widget_factory.create_entry(\n'
            result += f'{indent}    {parent}'
            if other_params:
                result += f',\n{indent}    {other_params}'
            result += f'\n{indent})\n'
            result += f'{indent}self.widget_factory.setup_placeholder({var_name}, "{placeholder}")'
            
            return result
        
        old_content = content
        content = re.sub(entry_pattern, replace_entry, content, flags=re.MULTILINE)
        
        if old_content != content:
            print(f"   ‚úÖ –ó–∞–º–µ–Ω–µ–Ω—ã CTkEntry —Å placeholder_text")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –±—ã–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
        if original_content != content:
            with open(file_path, 'w', encoding='utf-8') as f:
                f.write(content)
            print(f"   üíæ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω")
            return True
        else:
            print(f"   ‚è≠Ô∏è –ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è")
            return False
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    base_dir = Path(__file__).parent
    ui_dir = base_dir / "ui"
    
    print("üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ placeholder_text –≤–æ –≤—Å–µ—Ö UI —Ñ–∞–π–ª–∞—Ö")
    print(f"üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {ui_dir}")
    print()
    
    fixed_count = 0
    total_count = 0
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ .py —Ñ–∞–π–ª—ã –≤ ui/
    for py_file in ui_dir.rglob("*.py"):
        total_count += 1
        if fix_file(py_file):
            fixed_count += 1
    
    print()
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ {fixed_count} –∏–∑ {total_count} —Ñ–∞–π–ª–æ–≤")
    
    if fixed_count > 0:
        print("üéâ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
        print("üí° –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø–µ—Ä–µ–¥–∞—Ç—å widget_factory –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã –≤–∫–ª–∞–¥–æ–∫ –≤ main_window_v4.py")
    else:
        print("‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã —É–∂–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã")

if __name__ == "__main__":
    main()
